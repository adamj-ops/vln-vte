{"version":3,"file":"static/chunks/app/page-81bf2cdd02c6cb05.js","mappings":"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","sources":["webpack://_N_E/?3a24","webpack://_N_E/./src/components/Dialog/Dialog.tsx","webpack://_N_E/./src/app/page.tsx","webpack://_N_E/./src/app/page.module.scss","webpack://_N_E/./src/components/Dialog/Dialog.module.scss"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/roosbaetings/development/react/natf/src/app/page.tsx\");\n","import { Question, Subject } from \"@/models/models\";\nimport s from \"./Dialog.module.scss\";\nimport { useRef } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport Categories from \"../Categories/Categories\";\nimport QuestionItem from \"../QuestionItem/QuestionItem\";\n\ninterface Props {\n  open: boolean;\n  groupedQuestions: Partial<Record<string, Question[]>>;\n  selectedSubject: Subject;\n  onClose: () => void;\n}\n\nexport default function Dialog({\n  open,\n  groupedQuestions,\n  selectedSubject,\n  onClose,\n}: Props) {\n  const ref = useRef<HTMLDialogElement>(null);\n\n  if (open) {\n    ref.current?.showModal();\n  } else {\n    ref.current?.close();\n  }\n\n  return (\n    <dialog ref={ref} className={s.dialog}>\n      <div className={s.dialog__element}>\n        <div className={s.dialog__close_wrapper}>\n          <button\n            className={s.dialog__close}\n            onClick={() => {\n              ref.current?.close();\n              onClose();\n            }}\n          >\n            <Icon icon=\"close\" size={24} />\n          </button>\n        </div>\n        <header className={s.dialog__header}>\n          <p className=\"body-l\">{selectedSubject.content}</p>\n          <Categories subject={selectedSubject} index={1} />\n        </header>\n        <div className={s.dialog__content}>\n          <h3 className={`heading-m ${s.heading_s}`}>\n            Related patient questions\n          </h3>\n          {Object.keys(groupedQuestions).length === 0 && (\n            <div className={s.question__empty}>\n              <p className=\"body-m\">\n                There are no related patient questions for this topic.\n              </p>\n              <p className=\"body-m\">Try another topic or clear the filter.</p>\n            </div>\n          )}\n          <div className={s.dialog__list}>\n            {Object.entries(groupedQuestions).map(\n              ([title, questions], index) => (\n                <QuestionItem\n                  title={title}\n                  index={index}\n                  questions={questions}\n                />\n              )\n            )}\n          </div>\n        </div>\n      </div>\n    </dialog>\n  );\n}\n","\"use client\";\n\nimport s from \"./page.module.scss\";\nimport { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport questionsJson from \"@/data/questions.json\";\nimport subjectsJson from \"@/data/subjects.json\";\nimport Timeline from \"@/components/Timeline/Timeline\";\nimport { Subject } from \"@/models/models\";\nimport Dialog from \"@/components/Dialog/Dialog\";\nimport Categories from \"@/components/Categories/Categories\";\nimport Chip from \"@/components/Chip/Chip\";\nimport Filter from \"@/components/Filter/Filter\";\nimport Icon from \"@/components/Icon/Icon\";\n\nexport default function Home() {\n  const [questions, setQuestions] = useState(questionsJson);\n  const [subjects, setSubjects] = useState(subjectsJson);\n  const [selectedSubject, setSelectedSubject] = useState<Subject | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const groupedSubjects = Object.groupBy(subjects as Subject[], (subject) =>\n    subject.period.toString()\n  );\n\n  const filteredQuestions = selectedSubject\n    ? questions.filter((question) =>\n        selectedSubject.id.split(\", \").includes(question.id)\n      )\n    : questions;\n\n  const groupedQuestions = Object.groupBy(filteredQuestions, (question) =>\n    question.period.toString()\n  );\n\n  useEffect(() => {\n    if (selectedSubject) {\n      setIsDialogOpen(true);\n    }\n  }, [selectedSubject]);\n\n  return (\n    <main className={s.main}>\n      <Timeline isPatientPage={false} />\n\n      <div className={clsx(s.content, \"page-content\")}>\n        <div className={s.content__header}>\n          <h1 className=\"heading-xl\">\n            Guidance for <div className=\"bold\">Clinicians</div>\n          </h1>\n          <p className={s.content__subtitle}>\n            A list of key topics and discussion points to help guide your\n            conversations with patients newly diagnosed with venous\n            thromboembolism (VTE). These topics are tied to specific timepoints\n            in the patient journey, from the initial diagnostic encounter\n            through the 3-6 months post-diagnosis.\n          </p>\n        </div>\n        <div className={s.content__main} id=\"subjects-group\">\n          {Object.entries(groupedSubjects).map(([title, subjects], index) => (\n            <div\n              key={subjects === undefined ? index : subjects[0].id}\n              id={`subjects-${index}`}\n              className={s.subject__wrapper}\n            >\n              <Chip title={title} />\n              <ul className={s.subject__items}>\n                {(subjects as Subject[]).map((subject, index) => (\n                  <li\n                    key={`${index}-${subject.id}`}\n                    className={s.subject__item}\n                  >\n                    <button\n                      className={clsx(s.subject__button, {\n                        [s.selected]: false,\n                      })}\n                      onClick={() => {\n                        setSelectedSubject(subject);\n                      }}\n                    >\n                      <div className={s.subject__content}>\n                        <p>{subject.content}</p>\n                        <Categories subject={subject} index={index} />\n                      </div>\n                      <Icon icon=\"arrow-right-line\" />\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Filter\n        onTopicSelect={(label) => {\n          if (label == \"\") {\n            setSubjects(subjectsJson);\n            setQuestions(questionsJson);\n            return;\n          }\n\n          const newSubjects = subjectsJson.filter((subject) => {\n            return (\n              subject.primary === label ||\n              subject.secondary1 === label ||\n              subject.secondary2 === label\n            );\n          });\n          setSubjects(newSubjects);\n          const newQuestions = questionsJson.filter((question) => {\n            return (\n              question.primary === label ||\n              question.secondary1 === label ||\n              question.secondary2 === label\n            );\n          });\n          setQuestions(newQuestions);\n        }}\n      />\n\n      {selectedSubject && (\n        <Dialog\n          open={isDialogOpen}\n          groupedQuestions={groupedQuestions}\n          selectedSubject={selectedSubject}\n          onClose={() => {\n            setIsDialogOpen(false);\n            setSelectedSubject(null);\n          }}\n        />\n      )}\n    </main>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"page_content__szHtB\",\"content__header\":\"page_content__header__b0CsP\",\"content__main\":\"page_content__main__EvayW\",\"subject__wrapper\":\"page_subject__wrapper__dtNvX\",\"subject__items\":\"page_subject__items__6mevj\",\"subject__item\":\"page_subject__item__lOFaR\",\"subject__button\":\"page_subject__button__4BEpR\",\"subject__content\":\"page_subject__content__5ywGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__fSZT6\",\"dialog__element\":\"Dialog_dialog__element__Tc9Hg\",\"fade-in\":\"Dialog_fade-in__FLez9\",\"dialog__header\":\"Dialog_dialog__header__2gkP2\",\"dialog__close_wrapper\":\"Dialog_dialog__close_wrapper__5QVf3\",\"dialog__close\":\"Dialog_dialog__close__u26aM\",\"heading_s\":\"Dialog_heading_s__93IGo\",\"dialog__list\":\"Dialog_dialog__list__Ixz3X\",\"dialog-slide-in\":\"Dialog_dialog-slide-in__xa20t\"};"],"names":["Promise","resolve","then","__webpack_require__","bind","Dialog","param","ref","open","groupedQuestions","selectedSubject","onClose","useRef","current","showModal","close","jsx_runtime","jsx","dialog","className","s","jsxs","div","button","onClick","Icon","icon","size","header","p","content","Categories","subject","index","h3","concat","Object","keys","length","entries","map","title","questions","QuestionItem","Home","setQuestions","useState","questionsJson","subjects","setSubjects","subjectsJson","setSelectedSubject","isDialogOpen","setIsDialogOpen","groupedSubjects","groupBy","period","toString","filter","id","split","includes","question","useEffect","main","Timeline","isPatientPage","clsx","h1","Chip","ul","li","undefined","Filter","onTopicSelect","label","primary","secondary1","secondary2","module","exports"],"sourceRoot":""}